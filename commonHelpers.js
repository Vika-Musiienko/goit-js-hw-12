import{a as g,S as y,i as h}from"./assets/vendor-b42c18af.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))s(t);new MutationObserver(t=>{for(const r of t)if(r.type==="childList")for(const a of r.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&s(a)}).observe(document,{childList:!0,subtree:!0});function n(t){const r={};return t.integrity&&(r.integrity=t.integrity),t.referrerPolicy&&(r.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?r.credentials="include":t.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(t){if(t.ep)return;t.ep=!0;const r=n(t);fetch(t.href,r)}})();const L="42576318-0e1c04293cd098153cdda1833",w="https://pixabay.com/api/";async function b(o,e,n=15){try{return(await g.get(w,{params:{key:L,q:o,image_type:"photo",orientation:"horizontal",safesearch:!0,page:e,per_page:n}})).data}catch(s){throw console.error("Error fetching data:",s),s}}function v(o){return o.map(e=>`
        <div class="gallery-item">
            <a class="gallery-link" href="${e.largeImageURL}">
                <img class="gallery-image" src="${e.webformatURL}" alt="${e.tags}">
            </a>
            <div class="gallery-image-info">
                <p class="image-info-item"><span class="image-items-text">Likes: </span>${e.likes}</p>
                <p class="image-info-item"><span class="image-items-text">Views: </span>${e.views}</p>
                <p class="image-info-item"><span class="image-items-text">Comments: </span>${e.comments}</p>
                <p class="image-info-item"><span class="image-items-text">Downloads: </span>${e.downloads}</p>
            </div>
        </div>
    `).join("")}const S=new y(".gallery-link",{captionsData:"alt",captionDelay:250}),l=document.querySelector("#searchForm"),i=document.querySelector(".gallery"),d=document.querySelector(".loader"),u=document.getElementById("loadMoreBtn");let m="",c=1;const M=15;l.addEventListener("submit",x);u.addEventListener("click",E);function x(o){o.preventDefault(),i.innerHTML="",c=1,m=l.elements.searchQuery.value.trim(),p()}async function E(){c++,p()}async function p(){try{B();const e=(await b(m,c,M)).hits;e.length===0?$():(P(e),I(),q(),S.refresh())}catch(o){console.error("Error fetching data:",o),f()}}function P(o){const e=v(o);i.insertAdjacentHTML("beforeend",e),f()}function B(){d.style.display="block"}function f(){d.style.display="none"}function I(){u.style.display="block"}function $(){h.error({fontSize:"large",close:!1,position:"topRight",messageColor:"white",timeout:2e3,backgroundColor:"red",message:"Sorry, there are no images matching your search query. Please try again!"})}function q(){window.scrollBy({top:i.getBoundingClientRect().height*2,behavior:"smooth"})}
//# sourceMappingURL=commonHelpers.js.map
